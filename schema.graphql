type Mutation {
  signUp(
    """
    Parameters for SignUp
    """
    input: SignUpInput!
  ): SignUpPayload
}

"""
An object with an ID.
"""
interface Node {
  """
  ID of the object.
  """
  id: ID!
}

type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node

  """
  Fetches a list of objects given a list of IDs.
  """
  nodes(
    """
    IDs of the objects.
    """
    ids: [ID!]!
  ): [Node]!
}

"""
Autogenerated input type of SignUp
"""
input SignUpInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  password: String!
  username: String!
}

"""
Autogenerated return type of SignUp
"""
type SignUpPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}

type User implements Node {
  databaseId: String!
  email: String!
  id: ID!
  username: String!
}
